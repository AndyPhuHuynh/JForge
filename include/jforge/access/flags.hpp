#pragma once

namespace jforge::access
{
    enum class Class
    {
        Public	    = 0x0001, // Declared public; may be accessed from outside its package.
        Final	    = 0x0010, // Declared final; no subclasses allowed.
        Super	    = 0x0020, // Treat superclass methods specially when invoked by the invokespecial instruction.
        Interface   = 0x0200, // Is an interface, not a class.
        Abstract    = 0x0400, // Declared abstract; must not be instantiated.
        Synthetic   = 0x1000, // Declared synthetic; not present in the source code.
        Annotation  = 0x2000, // Declared as an annotation interface.
        Enum        = 0x4000, // Declared as an enum class.
        Module      = 0x8000, // Is a module, not a class or interface.
    };

    enum class Method
    {
        ACC_PUBLIC       = 0x0001, // Declared public; may be accessed from outside its package.
        ACC_PRIVATE	     = 0x0002, // Declared private; accessible only within the defining class and other classes belonging to the same nest.
        ACC_PROTECTED    = 0x0004, // Declared protected; may be accessed within subclasses.
        ACC_STATIC       = 0x0008, // Declared static.
        ACC_FINAL        = 0x0010, // Declared final; must not be overridden.
        ACC_SYNCHRONIZED = 0x0020, // Declared synchronized; invocation is wrapped by a monitor use.
        ACC_BRIDGE       = 0x0040, // A bridge method, generated by the compiler.
        ACC_VARARGS	     = 0x0080, // Declared with variable number of arguments.
        ACC_NATIVE       = 0x0100, // Declared native; implemented in a language other than the Java programming language.
        ACC_ABSTRACT     = 0x0400, // Declared abstract; no implementation is provided.
        ACC_STRICT       = 0x0800, // In a class file whose major version number is at least 46 and at most 60: Declared strictfp.
        ACC_SYNTHETIC    = 0x1000, // Declared synthetic; not present in the source code.
    };
}